# -*- coding: utf-8 -*-
"""TASK4: BASIC WEATHER APPLICATION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RsZME6Gm0GHRaiGTc00TMfhHMqtwzzH5
"""



import requests
from functools import lru_cache
import time

# We'll store weather data here for quick access later
weather_cache = {}

# The base URL for the weather API
BASE_URL = 'http://api.openweathermap.org/data/2.5/weather'

# Our API key for OpenWeatherMap
API_KEY = '9afc8ba689304327d6f998a73e4ecc44'

# Function to check if we have cached weather data for a city
def get_cached_weather(city):
    current_time = time.time()
    cached_data = weather_cache.get(city, None)

    # If we have cached data, we check if it's still valid (less than 30 minutes old)
    if cached_data is not None:
        cache_time, _ = cached_data
        if current_time - cache_time < 1800:  # 1800 seconds = 30 minutes
            return cached_data[1]  # Return the cached weather data

    # If no valid cached data exists, return None
    return None

# Function to cache weather data for a city
def cache_weather(city, data):
    current_time = time.time()
    weather_cache[city] = (current_time, data)

# Function to get weather data for a city
def get_weather(city):
    # First, let's check if we have cached weather data for this city
    cached_weather = get_cached_weather(city)

    # If we have cached data, we'll use it
    if cached_weather is not None:
        print("Using cached data")
        data = cached_weather
    else:
        # If not, we need to fetch the data from the API
        request_url = f"{BASE_URL}?q={city}&appid={API_KEY}"

        # Make a GET request to retrieve the data
        response = requests.get(request_url)

        # Check if the request was successful (status code 200)
        if response.status_code == 200:
            data = response.json()  # Convert JSON response to a Python dictionary
        else:
            # If there was an error, print the status code and response text
            print("An error occurred", response.status_code, response.text)
            return

        # Extract relevant weather information from the API response
        weather = data["weather"][0]["description"]  # Description of the weather
        temperature = round(data["main"]["temp"] - 273.15, 2)  # Temperature in Celsius
        feels_like = round(data["main"]["feels_like"] - 273.15, 2)  # "Feels like" temperature
        res = {
            "weather": weather,
            "temperature": temperature,
            "feels_like": feels_like,
            "humidity": data["main"]["humidity"],
            "pressure": data["main"]["pressure"],
            "wind_speed": data["wind"]["speed"],
        }

        # Cache the new weather data for future use
        cache_weather(city, res)
    return res

# Example usage
city = input('Enter a city: ')
print(get_weather(city))